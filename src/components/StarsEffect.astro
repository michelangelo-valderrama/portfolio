<div id="cnt" class:list={["bg-transparent", Astro.props.class]}></div>

<script>
  import * as THREE from "three"
  // import Stats from "three/examples/jsm/libs/stats.module.js"

  const STARS_QTY = 600,
    width = window.innerWidth,
    height = window.innerHeight
  const scene = new THREE.Scene(),
    camera = new THREE.PerspectiveCamera(100, width / height, 1, 1000),
    renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true })
  //, stats = new Stats()
  let sphere: THREE.Points,
    mouseX = 0,
    mouseY = 0

  init()
  animate()

  function init() {
    const container = document.getElementById("cnt") as HTMLDivElement

    scene.fog = new THREE.FogExp2(0x00000000, 0.0003)
    camera.position.z = 500

    stars()

    renderer.setClearColor(0x00000000, 0)
    renderer.setPixelRatio(window.devicePixelRatio)
    renderer.setSize(width, height)
    container.appendChild(renderer.domElement)

    window.addEventListener("resize", onWindowResize, false)
    document.addEventListener("mousemove", onMouseMove, false)

    // document.body.appendChild(stats.dom)
  }

  function animate() {
    requestAnimationFrame(animate)
    sphere.rotation.x += (4 + mouseX * 0.004) / 1000
    sphere.rotation.y += (4 + mouseY * 0.004) / 1000
    renderer.render(scene, camera)
    // stats.update()
  }

  function stars() {
    const geometry = new THREE.SphereGeometry()
    const material = new THREE.PointsMaterial({
      size: 1.5,
      opacity: 0.7,
      transparent: true,
    })

    for (let i = 0; i < STARS_QTY; i++) {
      geometry.attributes.position.setXYZ(
        i,
        Math.random() * 1400 - 700,
        Math.random() * 1400 - 700,
        Math.random() * 1400 - 700
      )
    }

    sphere = new THREE.Points(geometry, material)
    scene.add(sphere)
  }

  function onWindowResize() {
    const width = window.innerWidth,
      height = window.innerHeight

    camera.aspect = width / height
    camera.updateProjectionMatrix()
    renderer.setSize(width, height)
  }

  function onMouseMove(e: MouseEvent) {
    mouseX = e.clientX - width / 2
    mouseY = e.clientY - height / 2
  }
</script>
